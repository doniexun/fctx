/*
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
WARNING: This file is autogenerated from a template "test_cl_customize.c.in",
you may or may not want to edit this file. 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Testing the custom command line parser. This file is a template file for
handling different configurations. We need to be able to test with and without
a configuration setting and the easiest way to do this is to generate different
files.

====================================================================
Copyright (c) 2008 Ian Blumel.  All rights reserved.

This software is licensed as described in the file LICENSE, which
you should have received as part of this distribution.
====================================================================
File: test_cl_customize.c.in 
*/


#include "fct.h"

static fct_clo_init_t my_options[] = {
    {"--flag", "-f",  FCT_CLO_STORE_TRUE, "Test boolean flag."}, 
    {"--value", "-v", FCT_CLO_STORE_VALUE, "Test store value."}, 
    FCT_CLO_INIT_NULL
};

/* Configuration settings configured by cmake. */
#cmakedefine CL_USE_FLAG
#cmakedefine CL_USE_VALUE
#define CL_PASSED_IN_VALUE "@CL_PASSED_IN_VALUE@"
#define CL_USE_NAME        "@CL_USE_NAME@"

FCT_BGN()
{
    printf("Testing Custom Command Line Options: '%s'\n", CL_USE_NAME);
    FCT_CL_INSTALL(my_options);
    
    FCT_QTEST_BGN(test_flag) {
        int is_flag = FCT_CL_IS("--flag");
#if defined(CL_USE_FLAG)
        fct_chk( is_flag );
#else
        fct_chk( !is_flag);
#endif /* CL_USE_FLAG */
    } FCT_QTEST_END();

    FCT_QTEST_BGN(test_value) {
        char const *val = FCT_CL_VAL2("--value", NULL);
#if defined(CL_USE_VALUE)
        fct_chk_eq_str(val, CL_PASSED_IN_VALUE);
#else
        fct_chk_neq_str(val, CL_PASSED_IN_VALUE);
#endif /* CL_USE_VALUE */
    } FCT_QTEST_END();
}
FCT_END();
